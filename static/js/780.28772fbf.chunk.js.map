{"version":3,"file":"static/js/780.28772fbf.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"div\":\"Profile_div__2I3LH\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__LAu4e\",\"description\":\"ProfileInfo_description__4hVDD\",\"itemDescriprion\":\"ProfileInfo_itemDescriprion__BFPJT\",\"userPhoto\":\"ProfileInfo_userPhoto__waV-c\",\"contact\":\"ProfileInfo_contact__FU+h0\"};","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);      //HOOKS\r\n    let [status, setStatus] = useState(props.status);            //HOOKS\r\n\r\n    useEffect(() => {                                      //HOOKS\r\n            setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const  activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode (false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                            <span onDoubleClick={activateEditMode}>\r\n                                {props.status || \"non status\"}\r\n                            </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                               autoFocus={true} value={status}/>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\"\r\nimport styles from \"../../Common/FormsControls/FormsControls.module.css\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, ...props}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            {props.error &&\r\n                <div\r\n                    className={styles.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div className={classes.description}>\r\n                <div className={classes.itemDescriprion}>\r\n                    <div>\r\n                        Мое полное имя:\r\n                        {createField(\"Full name\", \"fullName\", [], Input)}\r\n                    </div>\r\n                    <div>\r\n                        Looking for a job:\r\n                        {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n                    </div>\r\n                    <div>\r\n                        My professional skills:\r\n                        {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n                    </div>\r\n                    <div>\r\n                        About me:\r\n                        { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.itemDescriprion}>\r\n                       Мои контакты: {Object.keys(props.profile.contacts).map(key => {\r\n                        return (\r\n                            <div key={key} className={classes.contact}>\r\n                                {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n                            </div>\r\n                        )\r\n                    }\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    form: \"edit-profile\",\r\n    enableReinitialize: true,\r\n    destroyOnUnmount: false\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/image/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto}\r\n                     className={classes.userPhoto}/>\r\n                <div>\r\n                    {props.isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                </div>\r\n\r\n                {editMode\r\n                    ? <ProfileDataForm profile={props.profile} initialValues={props.profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={props.profile} isOwner={props.isOwner}/>}\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div className={classes.description}>\r\n            {props.isOwner && <div>\r\n                <button onClick={props.goToEditMode}>edit</button>\r\n            </div>}\r\n            <div className={classes.itemDescriprion}>\r\n                <div>Мое полное имя: {props.profile.fullName}</div>\r\n                <div> Looking for a job: {props.profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                <div> My professional skills: {props.profile.lookingForAJobDescription}</div>\r\n                <div> About me: {props.profile.aboutMe}</div>\r\n            </div>\r\n            <div className={classes.itemDescriprion}>\r\n                Мои контакты: {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                }\r\n            )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={classes.contact}>{contactTitle} : {contactValue}</div>\r\n    )\r\n}\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__tMpGD\",\"postsBlock\":\"MyPosts_postsBlock__FYrE9\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__BsETF\"};","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src='https://media.istockphoto.com/id/1300845620/ru/%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F/%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C-icon-flat-%D0%B8%D0%B7%D0%BE%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD-%D0%BD%D0%B0-%D0%B1%D0%B5%D0%BB%D0%BE%D0%BC-%D1%84%D0%BE%D0%BD%D0%B5-%D1%81%D0%B8%D0%BC%D0%B2%D0%BE%D0%BB-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F-%D0%B8%D0%BB%D0%BB%D1%8E%D1%81%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%B0.jpg?s=612x612&w=0&k=20&c=Po5TTi0yw6lM7qz6yay5vUbUBy3kAEWrpQmDaUMWnek='/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n//test\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"renderer\")\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <AddPostFormRedux onSubmit={addNewPost}/>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field component={Textarea} placeholder={\"Enter you text\"}\r\n                           name={\"newPostText\"} validate={[required, maxLengthCreator(10)]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <ProfileInfo profile={props.profile} isOwner={props.isOwner}\r\n                         status={props.status} updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withRouter} from \"../../hoc/withRouter\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        console.log(\"refreshProfile\")\r\n        let userId = this.props.router.params.userId;\r\n        if (!userId) {\r\n            userId=this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.router.navigate('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.router.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}/>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserId: state.authReducer.id,\r\n    isAuth: state.authReducer.isAuth\r\n});\r\n\r\n/*//HOC\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nconnect(mapStateToProps, {\r\n    getUserProfile\r\n})(withRouter(WithUrlDataContainerComponent))*/\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer);"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","enableReinitialize","destroyOnUnmount","_ref","handleSubmit","_objectWithoutProperties","_excluded","onSubmit","error","className","styles","classes","createField","Input","type","Textarea","Object","keys","profile","contacts","map","key","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","Preloader","src","photos","large","userPhoto","target","files","length","savePhoto","ProfileDataForm","initialValues","formData","saveProfile","then","ProfileStatusWithHooks","message","likesCount","MyPosts","React","console","log","postsElements","posts","p","Post","id","AddPostFormRedux","values","addPost","newPostText","Field","component","placeholder","name","validate","required","maxLengthCreator","connect","state","profileReducer","dispatch","addPostCreator","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","router","params","authorizedUserId","navigate","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Profile","_objectSpread","compose","authReducer","isAuth","withRouter"],"sourceRoot":""}