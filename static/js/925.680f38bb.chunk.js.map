{"version":3,"file":"static/js/925.680f38bb.chunk.js","mappings":"yMACA,EAAsB,qB,UCAtB,EAAyB,4BAAzB,EAAwE,sCAAxE,EAA4H,iCAA5H,EAA0K,gCAA1K,EAAwN,iCAAxN,EAA2Q,qCAA3Q,EAA4T,+BAA5T,EAAiW,yBAAjW,EAAoY,6BAApY,EAAmb,qCAAnb,EAAie,4B,mBC4Cje,EA1C+B,SAACA,GAC5B,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAASF,EAAMQ,QAAOC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA3CC,EAAMC,EAAA,GAAEC,EAASD,EAAA,IAEtBE,EAAAA,EAAAA,YAAU,WACFD,EAAUV,EAAMQ,OACxB,GAAG,CAACR,EAAMQ,SAcN,OACII,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEMR,IACEO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,KAACC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,cACJC,EAAAA,EAAAA,KAAA,QAAM,YANnB,gCAMoCC,UAAWC,EAAgBC,cAjBhD,WACtBX,GAAY,EAChB,EAe0GO,SAC7Eb,EAAMQ,QAAU,kBAIhCH,IACGS,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SAAOI,SAhBJ,SAACC,GACpBT,EAAUS,EAAEC,cAAcC,MAC9B,EAcqDC,OArB1B,WACvBhB,GAAa,GACbN,EAAMuB,aAAaf,EACvB,EAmB2BgB,WAAW,EAAMH,MAAOb,QAMnD,E,mECgBJ,GANiCiB,EAAAA,EAAAA,GAAU,CACvCC,KAAM,eACNC,oBAAoB,EACpBC,kBAAkB,GAHWH,EA9CT,SAAHI,GAAkC,IAA7BC,EAAYD,EAAZC,aAAiB9B,GAAK+B,EAAAA,EAAAA,GAAAF,EAAAG,GAC5C,OACIpB,EAAAA,EAAAA,MAAA,QAAMqB,SAAUH,EAAajB,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBH,UAC/BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAEXb,EAAMkC,QACHpB,EAAAA,EAAAA,KAAA,OACIC,UAAWoB,EAAAA,EAAAA,iBAAwBtB,SAClCb,EAAMkC,SAGftB,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAoBH,SAAA,EAChCD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAwBH,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,+EAEAuB,EAAAA,EAAAA,IAAY,YAAa,WAAY,GAAIC,EAAAA,QAE9CzB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,sBAEAuB,EAAAA,EAAAA,IAAY,GAAI,iBAAkB,GAAIC,EAAAA,GAAO,CAACC,KAAM,iBAEzD1B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,2BAEAuB,EAAAA,EAAAA,IAAY,yBAA0B,4BAA6B,GAAIG,EAAAA,QAE5E3B,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,aAECuB,EAAAA,EAAAA,IAAY,WAAY,UAAW,GAAIG,EAAAA,WAGjD3B,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAwBH,SAAA,CAAC,wEACnB2B,OAAOC,KAAKzC,EAAM0C,QAAQC,UAAUC,KAAI,SAAAC,GACtD,OACIjC,EAAAA,EAAAA,MAAA,OAAeG,UAAWC,EAAgBH,SAAA,CACrCgC,EAAI,MAAGT,EAAAA,EAAAA,IAAYS,EAAK,YAAcA,EAAK,GAAIR,EAAAA,MAD1CQ,EAIlB,YAMpB,ICIMC,EAAc,SAAC9C,GACjB,OACIY,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAmBH,SAC9Bb,EAAM+C,UAAWjC,EAAAA,EAAAA,KAAA,OAAAD,UACdC,EAAAA,EAAAA,KAAA,UAAQkC,QAAShD,EAAMiD,aAAapC,SAAC,cAG7CD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAoBH,SAAA,EAChCD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAwBH,SAAA,EACpCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,+EAAiBb,EAAM0C,QAAQQ,aACpCtC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,uBAAqBb,EAAM0C,QAAQS,eAAiB,MAAQ,QAChEnD,EAAM0C,QAAQS,gBACXvC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,4BAA0Bb,EAAM0C,QAAQU,6BAAmC,MACpFxC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,cAAYb,EAAM0C,QAAQW,eAEnCzC,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAwBH,SAAA,CAAC,wEACtB2B,OAAOC,KAAKzC,EAAM0C,QAAQC,UAAUC,KAAI,SAAAC,GACnD,OAAO/B,EAAAA,EAAAA,KAACwC,EAAO,CAAWC,aAAcV,EAAKW,aAAcxD,EAAM0C,QAAQC,SAASE,IAA7DA,EACzB,YAMpB,EAEMS,EAAU,SAAHzB,GAAsC,IAAjC0B,EAAY1B,EAAZ0B,aAAcC,EAAY3B,EAAZ2B,aAC5B,OACIA,IAAgB5C,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAgBH,SAAA,CAAE0C,EAAa,MAAIC,IAE3E,EACA,EA/EoB,SAACxD,GAEjB,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAE1B,IAAKH,EAAM0C,QACP,OAAO5B,EAAAA,EAAAA,KAAC2C,EAAAA,EAAS,IAiBrB,OACI3C,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeH,UAC3BD,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAyBH,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAK4C,IAAmC,MAA9B1D,EAAM0C,QAAQiB,OAAOC,MAAgB5D,EAAM0C,QAAQiB,OAAOC,MAAQC,EACvE9C,UAAWC,KAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYH,SACvBb,EAAM+C,UAAWnC,EAAAA,EAAAA,MAAA,SAAAC,SAAA,CAAO,wHACrBC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAyBsB,KAAM,OAAQpB,SArBjD,SAACC,GACrBA,EAAE2C,OAAOC,MAAMC,QACfhE,EAAMiE,UAAU9C,EAAE2C,OAAOC,MAAM,GAEvC,UAoBgBjD,EAAAA,EAAAA,KAACoD,EAAsB,CAAC1D,OAAQR,EAAMQ,OAAQe,aAAcvB,EAAMuB,gBACtET,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoBH,SAC/BR,GACKS,EAAAA,EAAAA,KAACqD,EAAe,CAACzB,QAAS1C,EAAM0C,QAAS0B,cAAepE,EAAM0C,QAAST,SArB5E,SAACoC,GACdrE,EAAMsE,YAAYD,GAAUE,MACxB,WACIjE,GAAY,EAChB,GAER,KAgBsBQ,EAAAA,EAAAA,KAACgC,EAAW,CAACG,aAAc,WACzB3C,GAAY,EAChB,EAAGoC,QAAS1C,EAAM0C,QAASK,QAAS/C,EAAM+C,gBAOlE,ECnDA,EAAwB,uBAAxB,EAA4D,4BCA5D,EAAuB,mBCgBvB,EAda,SAAC/C,GAEV,OACIY,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAaH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OACI4C,IAAI,imBACP1D,EAAMwE,SACP1D,EAAAA,EAAAA,KAAA,OAAAD,UACID,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAM,QAAMb,EAAMyE,kBAIlC,E,oBCRMC,EAAUC,EAAAA,MAAW,SAAA3E,GACvB4E,QAAQC,IAAI,YACZ,IAAIC,EACA9E,EAAM+E,MAAMnC,KAAI,SAAAoC,GAAC,OAAIlE,EAAAA,EAAAA,KAACmE,EAAI,CAACT,QAASQ,EAAER,QAAoBC,WAAYO,EAAEP,YAApBO,EAAEE,GAA+B,IAMzF,OACItE,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAmBH,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACqE,EAAgB,CAAClD,SATjB,SAACmD,GACdpF,EAAMqF,QAAQD,EAAOE,YACzB,SAUQxE,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcH,SACzBiE,MAIjB,IAkBMK,GAAmB1D,EAAAA,EAAAA,GAAU,CAACC,KAAM,sBAAjBD,EAhBL,SAACzB,GACjB,OACIc,EAAAA,EAAAA,KAAA,QAAMmB,SAAUjC,EAAM8B,aAAajB,UAC/BD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAACyE,EAAAA,EAAK,CAACC,UAAWjD,EAAAA,GAAUkD,YAAa,iBAClCC,KAAM,cAAeC,SAAU,EAAEC,EAAAA,EAAAA,GAAiB,WAE7D9E,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,mBAK5B,IAIA,ICxBA,GAFyBgF,EAAAA,EAAAA,KAhBH,SAACC,GACnB,MAAO,CACHf,MAAOe,EAAMC,eAAehB,MAIpC,IACyB,SAACiB,GACtB,MAAO,CACHX,QAAS,SAACC,GACNU,GAASC,EAAAA,EAAAA,IAAeX,GAC5B,EAGR,GAEyBO,CAA6CnB,GCNtE,EAXgB,SAAC1E,GAEb,OACIY,EAAAA,EAAAA,MAAA,OAAKG,UAAWC,EAAYH,SAAA,EACxBC,EAAAA,EAAAA,KAACoF,EAAW,CAACxD,QAAS1C,EAAM0C,QAASK,QAAS/C,EAAM+C,QACvCvC,OAAQR,EAAMQ,OAAQe,aAAcvB,EAAMuB,aAC1C0C,UAAWjE,EAAMiE,UAAWK,YAAatE,EAAMsE,eAC5DxD,EAAAA,EAAAA,KAACqF,EAAgB,MAG7B,E,UCmCA,GAAeC,EAAAA,EAAAA,KACXP,EAAAA,EAAAA,KARkB,SAACC,GAAK,MAAM,CAC9BpD,QAASoD,EAAMC,eAAerD,QAC9BlC,OAAQsF,EAAMC,eAAevF,OAC7B6F,iBAAkBP,EAAMQ,YAAYpB,GACpCqB,OAAQT,EAAMQ,YAAYC,OAC7B,GAG4B,CACrBC,eAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAlF,aAAAA,EAAAA,GACA0C,UAAAA,EAAAA,GACAK,YAAAA,EAAAA,KAEJoC,EAAAA,EARJ,EAtCyB,SAAC1G,GAkBtB,OAJAW,EAAAA,EAAAA,YAAU,YAba,WACnBiE,QAAQC,IAAI,kBACZ,IAAI8B,EAAS3G,EAAM4G,OAAOC,OAAOF,OAC5BA,IACDA,EAAS3G,EAAMqG,mBAEXrG,EAAM4G,OAAOE,SAAS,UAG9B9G,EAAMwG,eAAeG,GACrB3G,EAAMyG,UAAUE,EACpB,CAGII,EACJ,GAAG,CAAC/G,EAAM4G,OAAOC,OAAOF,UAGpB7F,EAAAA,EAAAA,KAACkG,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACAjH,GAAK,IACT+C,SAAU/C,EAAM4G,OAAOC,OAAOF,OAC9BjE,QAAS1C,EAAM0C,QACflC,OAAQR,EAAMQ,OACde,aAAcvB,EAAMuB,aACpB0C,UAAWjE,EAAMiE,UACjBK,YAAatE,EAAMsE,cAG/B,G","sources":["components/Profile/Profile.module.css","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"div\":\"Profile_div__jUonr\"};","// extracted by mini-css-extract-plugin\nexport default {\"parent\":\"ProfileInfo_parent__TUr0-\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__+lP38\",\"profileInfo\":\"ProfileInfo_profileInfo__ABHz+\",\"buttonEdit\":\"ProfileInfo_buttonEdit__n3Wjw\",\"description\":\"ProfileInfo_description__MELVX\",\"itemDescriprion\":\"ProfileInfo_itemDescriprion__0QJQl\",\"userPhoto\":\"ProfileInfo_userPhoto__AY4pz\",\"btn\":\"ProfileInfo_btn__DO+sA\",\"contact\":\"ProfileInfo_contact__rDl4F\",\"customInputFile\":\"ProfileInfo_customInputFile__bGfxC\",\"status\":\"ProfileInfo_status__PUKre\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);      //HOOKS\r\n    let [status, setStatus] = useState(props.status);            //HOOKS\r\n\r\n    useEffect(() => {                                      //HOOKS\r\n            setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const  activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode (false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n    let clue = \"Double click to change status\"\r\n        return (\r\n            <div>\r\n\r\n                {!editMode &&\r\n                    <div> <span>Status: </span>\r\n                            <span data-hint={clue} className={classes.status} onDoubleClick={activateEditMode}>\r\n                                {props.status || \"non status\"}\r\n                            </span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                               autoFocus={true} value={status}/>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\"\r\nimport styles from \"../../Common/FormsControls/FormsControls.module.css\";\r\nimport {createField, Input, Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, ...props}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={classes.buttonEdit}>\r\n                <button>save</button>\r\n            </div>\r\n            {props.error &&\r\n                <div\r\n                    className={styles.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n            }\r\n            <div className={classes.description}>\r\n                <div className={classes.itemDescriprion}>\r\n                    <div>\r\n                        Мое полное имя:\r\n                        {createField(\"Full name\", \"fullName\", [], Input)}\r\n                    </div>\r\n                    <div>\r\n                        Looking for a job:\r\n                        {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n                    </div>\r\n                    <div>\r\n                        My professional skills:\r\n                        {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n                    </div>\r\n                    <div>\r\n                        About me:\r\n                        { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.itemDescriprion}>\r\n                       Мои контакты: {Object.keys(props.profile.contacts).map(key => {\r\n                        return (\r\n                            <div key={key} className={classes.contact}>\r\n                                {key}: {createField(key, \"contacts.\" + key, [], Input)}\r\n                            </div>\r\n                        )\r\n                    }\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n    form: \"edit-profile\",\r\n    enableReinitialize: true,\r\n    destroyOnUnmount: false\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.scss\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/image/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.parent}>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto}\r\n                     className={classes.userPhoto}/>\r\n                <div className={classes.btn}>\r\n                    {props.isOwner && <label> Загрузить фотографию\r\n                        <input className={classes.customInputFile} type={\"file\"} onChange={onMainPhotoSelected}/>\r\n                    </label>}\r\n                </div >\r\n                    <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <div className={classes.profileInfo}>\r\n                    {editMode\r\n                        ? <ProfileDataForm profile={props.profile} initialValues={props.profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }} profile={props.profile} isOwner={props.isOwner}/>}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.buttonEdit}>\r\n                {props.isOwner && <div>\r\n                    <button onClick={props.goToEditMode}>edit</button>\r\n                </div>}\r\n            </div>\r\n            <div className={classes.description}>\r\n                <div className={classes.itemDescriprion}>\r\n                    <div>Мое полное имя: {props.profile.fullName}</div>\r\n                    <div> Looking for a job: {props.profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                    {props.profile.lookingForAJob ?\r\n                        <div> My professional skills: {props.profile.lookingForAJobDescription}</div> : null}\r\n                    <div> About me: {props.profile.aboutMe}</div>\r\n                </div>\r\n                <div className={classes.itemDescriprion}>\r\n                    Мои контакты: {Object.keys(props.profile.contacts).map(key => {\r\n                        return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                    }\r\n                )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        contactValue && <div className={classes.contact}>{contactTitle} : {contactValue}</div>\r\n    )\r\n}\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__hzmu9\",\"postsBlock\":\"MyPosts_postsBlock__Ty9qI\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Jb482\"};","import React from \"react\";\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src='https://media.istockphoto.com/id/1300845620/ru/%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%BD%D0%B0%D1%8F/%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C-icon-flat-%D0%B8%D0%B7%D0%BE%D0%BB%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD-%D0%BD%D0%B0-%D0%B1%D0%B5%D0%BB%D0%BE%D0%BC-%D1%84%D0%BE%D0%BD%D0%B5-%D1%81%D0%B8%D0%BC%D0%B2%D0%BE%D0%BB-%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8F-%D0%B8%D0%BB%D0%BB%D1%8E%D1%81%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F-%D0%B2%D0%B5%D0%BA%D1%82%D0%BE%D1%80%D0%B0.jpg?s=612x612&w=0&k=20&c=Po5TTi0yw6lM7qz6yay5vUbUBy3kAEWrpQmDaUMWnek='/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n//test\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"renderer\")\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message} key={p.id} likesCount={p.likesCount}/>)\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <AddPostFormRedux onSubmit={addNewPost}/>\r\n                </div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <div>\r\n                    <Field component={Textarea} placeholder={\"Enter you text\"}\r\n                           name={\"newPostText\"} validate={[ maxLengthCreator(300)]}/>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"profileAddPostForm\"})(AddPostForm)\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profileReducer.posts,\r\n\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostCreator(newPostText));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport classes from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <ProfileInfo profile={props.profile} isOwner={props.isOwner}\r\n                         status={props.status} updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\nexport default Profile;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport {\r\n    getStatus,\r\n    getUserProfile,\r\n    savePhoto,\r\n    saveProfile,\r\n    updateStatus,\r\n} from '../../redux/profileReducer';\r\nimport Profile from './Profile';\r\nimport { withRouter } from '../../hoc/withRouter';\r\n\r\nconst ProfileContainer = (props) => {\r\n    const refreshProfile = () => {\r\n        console.log('refreshProfile');\r\n        let userId = props.router.params.userId;\r\n        if (!userId) {\r\n            userId = props.authorizedUserId;\r\n            if (!userId) {\r\n                props.router.navigate('/login');\r\n            }\r\n        }\r\n        props.getUserProfile(userId);\r\n        props.getStatus(userId);\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshProfile();\r\n    }, [props.router.params.userId]);\r\n\r\n    return (\r\n        <Profile\r\n            {...props}\r\n            isOwner={!props.router.params.userId}\r\n            profile={props.profile}\r\n            status={props.status}\r\n            updateStatus={props.updateStatus}\r\n            savePhoto={props.savePhoto}\r\n            saveProfile={props.saveProfile}\r\n        />\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profileReducer.profile,\r\n    status: state.profileReducer.status,\r\n    authorizedUserId: state.authReducer.id,\r\n    isAuth: state.authReducer.isAuth,\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile,\r\n    }),\r\n    withRouter\r\n)(ProfileContainer);"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","className","classes","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","enableReinitialize","destroyOnUnmount","_ref","handleSubmit","_objectWithoutProperties","_excluded","onSubmit","error","styles","createField","Input","type","Textarea","Object","keys","profile","contacts","map","key","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","Preloader","src","photos","large","userPhoto","target","files","length","savePhoto","ProfileStatusWithHooks","ProfileDataForm","initialValues","formData","saveProfile","then","message","likesCount","MyPosts","React","console","log","postsElements","posts","p","Post","id","AddPostFormRedux","values","addPost","newPostText","Field","component","placeholder","name","validate","maxLengthCreator","connect","state","profileReducer","dispatch","addPostCreator","ProfileInfo","MyPostsContainer","compose","authorizedUserId","authReducer","isAuth","getUserProfile","getStatus","withRouter","userId","router","params","navigate","refreshProfile","Profile","_objectSpread"],"sourceRoot":""}