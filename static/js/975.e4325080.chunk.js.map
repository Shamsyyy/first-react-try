{"version":3,"file":"static/js/975.e4325080.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-1/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://react-1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__mY938\",\"dialogsItems\":\"Dialogs_dialogsItems__f-SMT\",\"messages\":\"Dialogs_messages__+OsjT\",\"active\":\"Dialogs_active__o3pia\",\"addPost\":\"Dialogs_addPost__TB9wq\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__tf2zI\",\"active\":\"DialogItem_active__+Drar\"};","import React from \"react\";\r\nimport classes from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let pathDialog = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <NavLink to={pathDialog}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__O-Bzj\"};","import React from \"react\";\r\nimport classes from './Message.module.css'\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>\r\n            {props.message}\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React from \"react\";\r\nimport classes from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {Textarea} from \"../Common/FormsControls/FormsControls\";\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = props.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let messagesElements = props.messages.map(m => <Message key={m.id} message={m.message}/>)\r\n\r\n/*    let newMessageElement = React.createRef();\r\n    let sendMessage = () => {\r\n        props.sendMessage();\r\n    }\r\n\r\n    let onMessageChange = () => {\r\n        let text = newMessageElement.current.value;\r\n        props.onMessageChange(text);\r\n    }*/\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesElements}\r\n                <div className={classes.addPost}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageText\"}\r\n                       placeholder={\"Enter you text\"} validate={[required, maxLengthCreator(50)]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send a message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authReducer.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/Login\"}/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from \"react\";\r\nimport {addMessageCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsReducer.dialogs,\r\n        messages: state.dialogsReducer.messages,\r\n        newMessageText: state.dialogsReducer.newMessageText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageText) => {\r\n            dispatch(addMessageCreator(newMessageText));\r\n        }\r\n/*        onMessageChange: (text) => {\r\n            dispatch(updateNewMessageTextCreator(text));\r\n        }*/\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","pathDialog","id","_jsx","className","classes","children","NavLink","to","name","message","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","maxLengthCreator","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","values","sendMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","authReducer","compose","connect","dialogsReducer","dispatch","addMessageCreator","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","_objectSpread","Navigate","React","Dialogs"],"sourceRoot":""}